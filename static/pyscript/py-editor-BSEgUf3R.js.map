{"version":3,"file":"py-editor-BSEgUf3R.js","sources":["../src/plugins/py-editor.js"],"sourcesContent":["// PyScript py-editor plugin\nimport { Hook, XWorker, dedent, defineProperties } from \"polyscript/exports\";\nimport { TYPES, offline_interpreter, relative_url, stdlib } from \"../core.js\";\nimport { notify } from \"./error.js\";\nimport codemirror from \"./codemirror.js\";\n\nconst RUN_BUTTON = `<svg style=\"height:24px;width:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M19,12a1,1,0,0,1-.55.89l-10,5A1,1,0,0,1,8,18a1,1,0,0,1-.53-.15A1,1,0,0,1,7,17V7a1,1,0,0,1,1.45-.89l10,5A1,1,0,0,1,19,12Z\" fill=\"#464646\"/></svg>`;\nconst STOP_BUTTON = `<svg style=\"height:24px;width:24px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M7 7h10v10H7z\" style=\"fill:#464646;stroke:#464646;stroke-width:1;stroke-linecap:butt;stroke-linejoin:round;stroke-dasharray:none;paint-order:normal\"/></svg>`;\n\nlet id = 0;\nconst getID = (type) => `${type}-editor-${id++}`;\n\nconst envs = new Map();\nconst configs = new Map();\nconst editors = new WeakMap();\n\nconst hooks = {\n    worker: {\n        codeBeforeRun: () => stdlib,\n        // works on both Pyodide and MicroPython\n        onReady: ({ runAsync, io }, { sync }) => {\n            io.stdout = io.buffered(sync.write);\n            io.stderr = io.buffered(sync.writeErr);\n            sync.revoke();\n            sync.runAsync = runAsync;\n        },\n    },\n};\n\nconst validate = (config, result) => {\n    if (typeof result === \"boolean\") throw `Invalid source: ${config}`;\n    return result;\n};\n\nconst getRelatedScript = (target, type) => {\n    const editor = target.closest(`.${type}-editor-box`);\n    return editor?.parentNode?.previousElementSibling;\n};\n\nasync function execute({ currentTarget }) {\n    const { env, pySrc, outDiv } = this;\n    const hasRunButton = !!currentTarget;\n\n    if (hasRunButton) {\n        currentTarget.classList.add(\"running\");\n        currentTarget.innerHTML = STOP_BUTTON;\n        outDiv.innerHTML = \"\";\n    }\n\n    if (!envs.has(env)) {\n        const srcLink = URL.createObjectURL(new Blob([\"\"]));\n        const details = {\n            type: this.interpreter,\n            serviceWorker: this.serviceWorker,\n        };\n        const { config } = this;\n        if (config) {\n            // verify that config can be parsed and used\n            try {\n                details.configURL = relative_url(config);\n                if (config.endsWith(\".toml\")) {\n                    const [{ parse }, toml] = await Promise.all([\n                        import(\n                            /* webpackIgnore: true */ \"../3rd-party/toml.js\"\n                        ),\n                        fetch(config).then((r) => r.ok && r.text()),\n                    ]);\n                    details.config = parse(validate(config, toml));\n                } else if (config.endsWith(\".json\")) {\n                    const json = await fetch(config).then(\n                        (r) => r.ok && r.json(),\n                    );\n                    details.config = validate(config, json);\n                } else {\n                    details.configURL = relative_url(\"./config.txt\");\n                    details.config = JSON.parse(config);\n                }\n                details.version = offline_interpreter(details.config);\n            } catch (error) {\n                notify(error);\n                return;\n            }\n        } else {\n            details.config = {};\n        }\n\n        const xworker = XWorker.call(new Hook(null, hooks), srcLink, details);\n\n        // expose xworker like in terminal or other workers to allow\n        // creation and destruction of editors on the fly\n        if (hasRunButton) {\n            for (const type of TYPES.keys()) {\n                const script = getRelatedScript(currentTarget, type);\n                if (script) {\n                    defineProperties(script, { xworker: { value: xworker } });\n                    break;\n                }\n            }\n        }\n\n        const { sync } = xworker;\n        const { promise, resolve } = Promise.withResolvers();\n        envs.set(env, promise);\n        sync.revoke = () => {\n            URL.revokeObjectURL(srcLink);\n            resolve(xworker);\n        };\n    }\n\n    // wait for the env then set the target div\n    // before executing the current code\n    return envs.get(env).then((xworker) => {\n        xworker.onerror = ({ error }) => {\n            if (hasRunButton) {\n                outDiv.insertAdjacentHTML(\n                    \"beforeend\",\n                    `<span style='color:red'>${\n                        error.message || error\n                    }</span>\\n`,\n                );\n            }\n            console.error(error);\n        };\n\n        const enable = () => {\n            if (hasRunButton) {\n                currentTarget.classList.remove(\"running\");\n                currentTarget.innerHTML = RUN_BUTTON;\n            }\n        };\n        const { sync } = xworker;\n        sync.write = (str) => {\n            if (hasRunButton) outDiv.innerText += `${str}\\n`;\n            else console.log(str);\n        };\n        sync.writeErr = (str) => {\n            if (hasRunButton) {\n                outDiv.insertAdjacentHTML(\n                    \"beforeend\",\n                    `<span style='color:red'>${str}</span>\\n`,\n                );\n            } else {\n                notify(str);\n                console.error(str);\n            }\n        };\n        sync.runAsync(pySrc).then(enable, enable);\n    });\n}\n\nconst makeRunButton = (handler, type) => {\n    const runButton = document.createElement(\"button\");\n    runButton.className = `absolute ${type}-editor-run-button`;\n    runButton.innerHTML = RUN_BUTTON;\n    runButton.setAttribute(\"aria-label\", \"Python Script Run Button\");\n    runButton.addEventListener(\"click\", async (event) => {\n        if (\n            runButton.classList.contains(\"running\") &&\n            confirm(\"Stop evaluating this code?\")\n        ) {\n            const script = getRelatedScript(runButton, type);\n            if (script) {\n                const editor = editors.get(script);\n                const content = editor.state.doc.toString();\n                const clone = script.cloneNode(true);\n                clone.type = `${type}-editor`;\n                clone.textContent = content;\n                script.xworker.terminate();\n                script.nextElementSibling.remove();\n                script.replaceWith(clone);\n                editors.delete(script);\n            }\n            return;\n        }\n        runButton.blur();\n        await handler.handleEvent(event);\n    });\n    return runButton;\n};\n\nconst makeEditorDiv = (handler, type) => {\n    const editorDiv = document.createElement(\"div\");\n    editorDiv.className = `${type}-editor-input`;\n    editorDiv.setAttribute(\"aria-label\", \"Python Script Area\");\n\n    const runButton = makeRunButton(handler, type);\n    const editorShadowContainer = document.createElement(\"div\");\n\n    // avoid outer elements intercepting key events (reveal as example)\n    editorShadowContainer.addEventListener(\"keydown\", (event) => {\n        event.stopPropagation();\n    });\n\n    editorDiv.append(runButton, editorShadowContainer);\n\n    return editorDiv;\n};\n\nconst makeOutDiv = (type) => {\n    const outDiv = document.createElement(\"div\");\n    outDiv.className = `${type}-editor-output`;\n    outDiv.id = `${getID(type)}-output`;\n    return outDiv;\n};\n\nconst makeBoxDiv = (handler, type) => {\n    const boxDiv = document.createElement(\"div\");\n    boxDiv.className = `${type}-editor-box`;\n\n    const editorDiv = makeEditorDiv(handler, type);\n    const outDiv = makeOutDiv(type);\n    boxDiv.append(editorDiv, outDiv);\n\n    return [boxDiv, outDiv, editorDiv.querySelector(\"button\")];\n};\n\nconst init = async (script, type, interpreter) => {\n    const [\n        { basicSetup, EditorView },\n        { Compartment },\n        { python },\n        { indentUnit },\n        { keymap },\n        { defaultKeymap, indentWithTab },\n    ] = await Promise.all([\n        codemirror.core,\n        codemirror.state,\n        codemirror.python,\n        codemirror.language,\n        codemirror.view,\n        codemirror.commands,\n    ]);\n\n    let isSetup = script.hasAttribute(\"setup\");\n    const hasConfig = script.hasAttribute(\"config\");\n    const serviceWorker = script.getAttribute(\"service-worker\");\n    const env = `${interpreter}-${script.getAttribute(\"env\") || getID(type)}`;\n\n    // helps preventing too lazy ServiceWorker initialization on button run\n    if (serviceWorker) {\n        new XWorker(\"data:application/javascript,postMessage(0)\", {\n            type: \"dummy\",\n            serviceWorker,\n        }).onmessage = ({ target }) => target.terminate();\n    }\n\n    if (hasConfig && configs.has(env)) {\n        throw new SyntaxError(\n            configs.get(env)\n                ? `duplicated config for env: ${env}`\n                : `unable to add a config to the env: ${env}`,\n        );\n    }\n\n    configs.set(env, hasConfig);\n\n    let source = script.textContent;\n\n    // verify the src points to a valid file that can be parsed\n    const { src } = script;\n    if (src) {\n        try {\n            source = validate(\n                src,\n                await fetch(src).then((b) => b.ok && b.text()),\n            );\n        } catch (error) {\n            notify(error);\n            return;\n        }\n    }\n\n    const context = {\n        // allow the listener to be overridden at distance\n        handleEvent: execute,\n        serviceWorker,\n        interpreter,\n        env,\n        config: hasConfig && script.getAttribute(\"config\"),\n        get pySrc() {\n            return isSetup ? source : editor.state.doc.toString();\n        },\n        get outDiv() {\n            return isSetup ? null : outDiv;\n        },\n    };\n\n    let target;\n    defineProperties(script, {\n        target: { get: () => target },\n        handleEvent: {\n            get: () => context.handleEvent,\n            set: (callback) => {\n                // do not bother with logic if it was set back as its original handler\n                if (callback === execute) context.handleEvent = execute;\n                // in every other case be sure that if the listener override returned\n                // `false` nothing happens, otherwise keep doing what it always did\n                else {\n                    context.handleEvent = async (event) => {\n                        // trap the currentTarget ASAP (if any)\n                        // otherwise it gets lost asynchronously\n                        const { currentTarget } = event;\n                        // augment a code snapshot before invoking the override\n                        defineProperties(event, {\n                            code: { value: context.pySrc },\n                        });\n                        // avoid executing the default handler if the override returned `false`\n                        if ((await callback(event)) !== false)\n                            await execute.call(context, { currentTarget });\n                    };\n                }\n            },\n        },\n        code: {\n            get: () => context.pySrc,\n            set: (insert) => {\n                if (isSetup) return;\n                editor.update([\n                    editor.state.update({\n                        changes: {\n                            from: 0,\n                            to: editor.state.doc.length,\n                            insert,\n                        },\n                    }),\n                ]);\n            },\n        },\n        process: {\n            /**\n             * Simulate a setup node overriding the source to evaluate.\n             * @param {string} code the Python code to evaluate.\n             * @param {boolean} asRunButtonAction invoke the `Run` button handler.\n             * @returns {Promise<...>} fulfill once code has been evaluated.\n             */\n            value(code, asRunButtonAction = false) {\n                if (asRunButtonAction) return listener();\n                const wasSetup = isSetup;\n                const wasSource = source;\n                isSetup = true;\n                source = code;\n                const restore = () => {\n                    isSetup = wasSetup;\n                    source = wasSource;\n                };\n                return context\n                    .handleEvent({ currentTarget: null })\n                    .then(restore, restore);\n            },\n        },\n    });\n\n    const notifyEditor = () => {\n        const event = new Event(`${type}-editor`, { bubbles: true });\n        script.dispatchEvent(event);\n    };\n\n    if (isSetup) {\n        await context.handleEvent({ currentTarget: null });\n        notifyEditor();\n        return;\n    }\n\n    const selector = script.getAttribute(\"target\");\n\n    if (selector) {\n        target =\n            document.getElementById(selector) ||\n            document.querySelector(selector);\n        if (!target) throw new Error(`Unknown target ${selector}`);\n    } else {\n        target = document.createElement(`${type}-editor`);\n        target.style.display = \"block\";\n        script.after(target);\n    }\n\n    if (!target.id) target.id = getID(type);\n    if (!target.hasAttribute(\"exec-id\")) target.setAttribute(\"exec-id\", 0);\n    if (!target.hasAttribute(\"root\")) target.setAttribute(\"root\", target.id);\n\n    // @see https://github.com/JeffersGlass/mkdocs-pyscript/blob/main/mkdocs_pyscript/js/makeblocks.js\n    const [boxDiv, outDiv, runButton] = makeBoxDiv(context, type);\n    boxDiv.dataset.env = script.hasAttribute(\"env\") ? env : interpreter;\n\n    const inputChild = boxDiv.querySelector(`.${type}-editor-input > div`);\n    const parent = inputChild.attachShadow({ mode: \"open\" });\n    // avoid inheriting styles from the outer component\n    parent.innerHTML = `<style> :host { all: initial; }</style>`;\n\n    target.appendChild(boxDiv);\n\n    const doc = dedent(script.textContent).trim();\n\n    // preserve user indentation, if any\n    const indentation = /^([ \\t]+)/m.test(doc) ? RegExp.$1 : \"    \";\n\n    const listener = () => runButton.click();\n    const editor = new EditorView({\n        extensions: [\n            indentUnit.of(indentation),\n            new Compartment().of(python()),\n            keymap.of([\n                ...defaultKeymap,\n                { key: \"Ctrl-Enter\", run: listener, preventDefault: true },\n                { key: \"Cmd-Enter\", run: listener, preventDefault: true },\n                { key: \"Shift-Enter\", run: listener, preventDefault: true },\n                // @see https://codemirror.net/examples/tab/\n                indentWithTab,\n            ]),\n            basicSetup,\n        ],\n        foldGutter: true,\n        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n        parent,\n        doc,\n    });\n\n    editors.set(script, editor);\n    editor.focus();\n    notifyEditor();\n};\n\n// avoid too greedy MutationObserver operations at distance\nlet timeout = 0;\n\n// avoid delayed initialization\nlet queue = Promise.resolve();\n\n// reset interval value then check for new scripts\nconst resetTimeout = () => {\n    timeout = 0;\n    pyEditor();\n};\n\n// triggered both ASAP on the living DOM and via MutationObserver later\nconst pyEditor = () => {\n    if (timeout) return;\n    timeout = setTimeout(resetTimeout, 250);\n    for (const [type, interpreter] of TYPES) {\n        const selector = `script[type=\"${type}-editor\"]`;\n        for (const script of document.querySelectorAll(selector)) {\n            // avoid any further bootstrap by changing the type as active\n            script.type += \"-active\";\n            // don't await in here or multiple calls might happen\n            // while the first script is being initialized\n            queue = queue.then(() => init(script, type, interpreter));\n        }\n    }\n    return queue;\n};\n\nnew MutationObserver(pyEditor).observe(document, {\n    childList: true,\n    subtree: true,\n});\n\n// try to check the current document ASAP\nexport default pyEditor();\n"],"names":["RUN_BUTTON","id","getID","type","envs","Map","configs","editors","WeakMap","hooks","worker","codeBeforeRun","stdlib","onReady","runAsync","io","sync","stdout","buffered","write","stderr","writeErr","revoke","validate","config","result","getRelatedScript","target","editor","closest","parentNode","previousElementSibling","async","execute","currentTarget","env","pySrc","outDiv","this","hasRunButton","classList","add","innerHTML","has","srcLink","URL","createObjectURL","Blob","details","interpreter","serviceWorker","configURL","relative_url","endsWith","parse","toml","Promise","all","import","fetch","then","r","ok","text","json","JSON","version","offline_interpreter","error","notify","xworker","XWorker","call","Hook","TYPES","keys","script","defineProperties","value","promise","resolve","withResolvers","set","revokeObjectURL","get","onerror","insertAdjacentHTML","message","console","enable","remove","str","innerText","log","makeEditorDiv","handler","editorDiv","document","createElement","className","setAttribute","runButton","addEventListener","event","contains","confirm","content","state","doc","toString","clone","cloneNode","textContent","terminate","nextElementSibling","replaceWith","delete","blur","handleEvent","makeRunButton","editorShadowContainer","stopPropagation","append","makeBoxDiv","boxDiv","makeOutDiv","querySelector","init","basicSetup","EditorView","Compartment","python","indentUnit","keymap","defaultKeymap","indentWithTab","codemirror","core","language","view","commands","isSetup","hasAttribute","hasConfig","getAttribute","onmessage","SyntaxError","source","src","b","context","callback","code","insert","update","changes","from","to","length","process","asRunButtonAction","listener","wasSetup","wasSource","restore","notifyEditor","Event","bubbles","dispatchEvent","selector","getElementById","Error","style","display","after","dataset","parent","attachShadow","mode","appendChild","dedent","trim","indentation","test","RegExp","$1","click","extensions","of","key","run","preventDefault","foldGutter","gutters","focus","timeout","queue","resetTimeout","pyEditor","setTimeout","querySelectorAll","MutationObserver","observe","childList","subtree","pyEditor$1"],"mappings":"4IAMA,MAAMA,EAAa,uPAGnB,IAAIC,EAAK,EACT,MAAMC,EAASC,GAAS,GAAGA,YAAeF,MAEpCG,EAAO,IAAIC,IACXC,EAAU,IAAID,IACdE,EAAU,IAAIC,QAEdC,EAAQ,CACVC,OAAQ,CACJC,cAAe,IAAMC,EAErBC,QAAS,EAAGC,WAAUC,OAAQC,WAC1BD,EAAGE,OAASF,EAAGG,SAASF,EAAKG,OAC7BJ,EAAGK,OAASL,EAAGG,SAASF,EAAKK,UAC7BL,EAAKM,SACLN,EAAKF,SAAWA,CAAQ,IAK9BS,EAAW,CAACC,EAAQC,KACtB,GAAsB,kBAAXA,EAAsB,KAAM,mBAAmBD,IAC1D,OAAOC,CAAM,EAGXC,EAAmB,CAACC,EAAQxB,KAC9B,MAAMyB,EAASD,EAAOE,QAAQ,IAAI1B,gBAClC,OAAOyB,GAAQE,YAAYC,sBAAsB,EAGrDC,eAAeC,GAAQC,cAAEA,IACrB,MAAMC,IAAEA,EAAGC,MAAEA,EAAKC,OAAEA,GAAWC,KACzBC,IAAiBL,EAQvB,GANIK,IACAL,EAAcM,UAAUC,IAAI,WAC5BP,EAAcQ,UAtCF,mQAuCZL,EAAOK,UAAY,KAGlBtC,EAAKuC,IAAIR,GAAM,CAChB,MAAMS,EAAUC,IAAIC,gBAAgB,IAAIC,KAAK,CAAC,MACxCC,EAAU,CACZ7C,KAAMmC,KAAKW,YACXC,cAAeZ,KAAKY,gBAElB1B,OAAEA,GAAWc,KACnB,GAAId,EAEA,IAEI,GADAwB,EAAQG,UAAYC,EAAa5B,GAC7BA,EAAO6B,SAAS,SAAU,CAC1B,OAAOC,MAAEA,GAASC,SAAcC,QAAQC,IAAI,CACxCC,OAC8B,sBAE9BC,MAAMnC,GAAQoC,MAAMC,GAAMA,EAAEC,IAAMD,EAAEE,WAExCf,EAAQxB,OAAS8B,EAAM/B,EAASC,EAAQ+B,GAC3C,MAAM,GAAI/B,EAAO6B,SAAS,SAAU,CACjC,MAAMW,QAAaL,MAAMnC,GAAQoC,MAC5BC,GAAMA,EAAEC,IAAMD,EAAEG,SAErBhB,EAAQxB,OAASD,EAASC,EAAQwC,EACtD,MACoBhB,EAAQG,UAAYC,EAAa,gBACjCJ,EAAQxB,OAASyC,KAAKX,MAAM9B,GAEhCwB,EAAQkB,QAAUC,EAAoBnB,EAAQxB,OACjD,CAAC,MAAO4C,GAEL,YADAC,EAAOD,EAEvB,MAEYpB,EAAQxB,OAAS,CAAE,EAGvB,MAAM8C,EAAUC,EAAQC,KAAK,IAAIC,EAAK,KAAMhE,GAAQmC,EAASI,GAI7D,GAAIT,EACA,IAAK,MAAMpC,KAAQuE,EAAMC,OAAQ,CAC7B,MAAMC,EAASlD,EAAiBQ,EAAe/B,GAC/C,GAAIyE,EAAQ,CACRC,EAAiBD,EAAQ,CAAEN,QAAS,CAAEQ,MAAOR,KAC7C,KACpB,CACA,CAGQ,MAAMtD,KAAEA,GAASsD,GACXS,QAAEA,EAAOC,QAAEA,GAAYxB,QAAQyB,gBACrC7E,EAAK8E,IAAI/C,EAAK4C,GACd/D,EAAKM,OAAS,KACVuB,IAAIsC,gBAAgBvC,GACpBoC,EAAQV,EAAQ,CAE5B,CAII,OAAOlE,EAAKgF,IAAIjD,GAAKyB,MAAMU,IACvBA,EAAQe,QAAU,EAAGjB,YACb7B,GACAF,EAAOiD,mBACH,YACA,2BACIlB,EAAMmB,SAAWnB,cAI7BoB,QAAQpB,MAAMA,EAAM,EAGxB,MAAMqB,EAAS,KACPlD,IACAL,EAAcM,UAAUkD,OAAO,WAC/BxD,EAAcQ,UAAY1C,EAC1C,GAEcgB,KAAEA,GAASsD,EACjBtD,EAAKG,MAASwE,IACNpD,EAAcF,EAAOuD,WAAa,GAAGD,MACpCH,QAAQK,IAAIF,EAAI,EAEzB3E,EAAKK,SAAYsE,IACTpD,EACAF,EAAOiD,mBACH,YACA,2BAA2BK,eAG/BtB,EAAOsB,GACPH,QAAQpB,MAAMuB,GAC9B,EAEQ3E,EAAKF,SAASsB,GAAOwB,KAAK6B,EAAQA,EAAO,GAEjD,CAEA,MA8BMK,EAAgB,CAACC,EAAS5F,KAC5B,MAAM6F,EAAYC,SAASC,cAAc,OACzCF,EAAUG,UAAY,GAAGhG,iBACzB6F,EAAUI,aAAa,aAAc,sBAErC,MAAMC,EAnCY,EAACN,EAAS5F,KAC5B,MAAMkG,EAAYJ,SAASC,cAAc,UA0BzC,OAzBAG,EAAUF,UAAY,YAAYhG,sBAClCkG,EAAU3D,UAAY1C,EACtBqG,EAAUD,aAAa,aAAc,4BACrCC,EAAUC,iBAAiB,SAAStE,MAAOuE,IACvC,GACIF,EAAU7D,UAAUgE,SAAS,YAC7BC,QAAQ,8BAFZ,CAII,MAAM7B,EAASlD,EAAiB2E,EAAWlG,GAC3C,GAAIyE,EAAQ,CACR,MACM8B,EADSnG,EAAQ6E,IAAIR,GACJ+B,MAAMC,IAAIC,WAC3BC,EAAQlC,EAAOmC,WAAU,GAC/BD,EAAM3G,KAAO,GAAGA,WAChB2G,EAAME,YAAcN,EACpB9B,EAAON,QAAQ2C,YACfrC,EAAOsC,mBAAmBxB,SAC1Bd,EAAOuC,YAAYL,GACnBvG,EAAQ6G,OAAOxC,EAC/B,CAEA,MACQyB,EAAUgB,aACJtB,EAAQuB,YAAYf,EAAM,IAE7BF,CAAS,EAQEkB,CAAcxB,EAAS5F,GACnCqH,EAAwBvB,SAASC,cAAc,OASrD,OANAsB,EAAsBlB,iBAAiB,WAAYC,IAC/CA,EAAMkB,iBAAiB,IAG3BzB,EAAU0B,OAAOrB,EAAWmB,GAErBxB,CAAS,EAUd2B,EAAa,CAAC5B,EAAS5F,KACzB,MAAMyH,EAAS3B,SAASC,cAAc,OACtC0B,EAAOzB,UAAY,GAAGhG,eAEtB,MAAM6F,EAAYF,EAAcC,EAAS5F,GACnCkC,EAZS,CAAClC,IAChB,MAAMkC,EAAS4D,SAASC,cAAc,OAGtC,OAFA7D,EAAO8D,UAAY,GAAGhG,kBACtBkC,EAAOpC,GAAK,GAAGC,EAAMC,YACdkC,CAAM,EAQEwF,CAAW1H,GAG1B,OAFAyH,EAAOF,OAAO1B,EAAW3D,GAElB,CAACuF,EAAQvF,EAAQ2D,EAAU8B,cAAc,UAAU,EAGxDC,EAAO/F,MAAO4C,EAAQzE,EAAM8C,KAC9B,OACI+E,WAAEA,EAAUC,WAAEA,IACdC,YAAEA,IACFC,OAAEA,IACFC,WAAEA,IACFC,OAAEA,IACFC,cAAEA,EAAaC,cAAEA,UACX/E,QAAQC,IAAI,CAClB+E,EAAWC,KACXD,EAAW7B,MACX6B,EAAWL,OACXK,EAAWE,SACXF,EAAWG,KACXH,EAAWI,WAGf,IAAIC,EAAUjE,EAAOkE,aAAa,SAClC,MAAMC,EAAYnE,EAAOkE,aAAa,UAChC5F,EAAgB0B,EAAOoE,aAAa,kBACpC7G,EAAM,GAAGc,KAAe2B,EAAOoE,aAAa,QAAU9I,EAAMC,KAUlE,GAPI+C,IACA,IAAIqB,EAAQ,6CAA8C,CACtDpE,KAAM,QACN+C,kBACD+F,UAAY,EAAGtH,YAAaA,EAAOsF,aAGtC8B,GAAazI,EAAQqC,IAAIR,GACzB,MAAM,IAAI+G,YACN5I,EAAQ8E,IAAIjD,GACN,8BAA8BA,IAC9B,sCAAsCA,KAIpD7B,EAAQ4E,IAAI/C,EAAK4G,GAEjB,IAAII,EAASvE,EAAOoC,YAGpB,MAAMoC,IAAEA,GAAQxE,EAChB,GAAIwE,EACA,IACID,EAAS5H,EACL6H,QACMzF,MAAMyF,GAAKxF,MAAMyF,GAAMA,EAAEvF,IAAMuF,EAAEtF,SAE9C,CAAC,MAAOK,GAEL,YADAC,EAAOD,EAEnB,CAGI,MAAMkF,EAAU,CAEZhC,YAAarF,EACbiB,gBACAD,cACAd,MACAX,OAAQuH,GAAanE,EAAOoE,aAAa,UACzC,SAAI5G,GACA,OAAOyG,EAAUM,EAASvH,EAAO+E,MAAMC,IAAIC,UAC9C,EACD,UAAIxE,GACA,OAAOwG,EAAU,KAAOxG,CAC3B,GAGL,IAAIV,EACJkD,EAAiBD,EAAQ,CACrBjD,OAAQ,CAAEyD,IAAK,IAAMzD,GACrB2F,YAAa,CACTlC,IAAK,IAAMkE,EAAQhC,YACnBpC,IAAMqE,IAEwBD,EAAQhC,YAA9BiC,IAAatH,EAA+BA,EAItBD,MAAOuE,IAGzB,MAAMrE,cAAEA,GAAkBqE,EAE1B1B,EAAiB0B,EAAO,CACpBiD,KAAM,CAAE1E,MAAOwE,EAAQlH,UAGK,UAArBmH,EAAShD,UACVtE,EAAQuC,KAAK8E,EAAS,CAAEpH,iBAAgB,CAE1E,GAGQsH,KAAM,CACFpE,IAAK,IAAMkE,EAAQlH,MACnB8C,IAAMuE,IACEZ,GACJjH,EAAO8H,OAAO,CACV9H,EAAO+E,MAAM+C,OAAO,CAChBC,QAAS,CACLC,KAAM,EACNC,GAAIjI,EAAO+E,MAAMC,IAAIkD,OACrBL,aAGV,GAGVM,QAAS,CAOL,KAAAjF,CAAM0E,EAAMQ,GAAoB,GAC5B,GAAIA,EAAmB,OAAOC,IAC9B,MAAMC,EAAWrB,EACXsB,EAAYhB,EAClBN,GAAU,EACVM,EAASK,EACT,MAAMY,EAAU,KACZvB,EAAUqB,EACVf,EAASgB,CAAS,EAEtB,OAAOb,EACFhC,YAAY,CAAEpF,cAAe,OAC7B0B,KAAKwG,EAASA,EACtB,KAIT,MAAMC,EAAe,KACjB,MAAM9D,EAAQ,IAAI+D,MAAM,GAAGnK,WAAe,CAAEoK,SAAS,IACrD3F,EAAO4F,cAAcjE,EAAM,EAG/B,GAAIsC,EAGA,aAFMS,EAAQhC,YAAY,CAAEpF,cAAe,YAC3CmI,IAIJ,MAAMI,EAAW7F,EAAOoE,aAAa,UAErC,GAAIyB,GAIA,GAHA9I,EACIsE,SAASyE,eAAeD,IACxBxE,SAAS6B,cAAc2C,IACtB9I,EAAQ,MAAM,IAAIgJ,MAAM,kBAAkBF,UAE/C9I,EAASsE,SAASC,cAAc,GAAG/F,YACnCwB,EAAOiJ,MAAMC,QAAU,QACvBjG,EAAOkG,MAAMnJ,GAGZA,EAAO1B,KAAI0B,EAAO1B,GAAKC,EAAMC,IAC7BwB,EAAOmH,aAAa,YAAYnH,EAAOyE,aAAa,UAAW,GAC/DzE,EAAOmH,aAAa,SAASnH,EAAOyE,aAAa,OAAQzE,EAAO1B,IAGrE,MAAO2H,EAAQvF,EAAQgE,GAAasB,EAAW2B,EAASnJ,GACxDyH,EAAOmD,QAAQ5I,IAAMyC,EAAOkE,aAAa,OAAS3G,EAAMc,EAExD,MACM+H,EADapD,EAAOE,cAAc,IAAI3H,wBAClB8K,aAAa,CAAEC,KAAM,SAE/CF,EAAOtI,UAAY,0CAEnBf,EAAOwJ,YAAYvD,GAEnB,MAAMhB,EAAMwE,EAAOxG,EAAOoC,aAAaqE,OAGjCC,EAAc,aAAaC,KAAK3E,GAAO4E,OAAOC,GAAK,OAEnDxB,EAAW,IAAM5D,EAAUqF,QAC3B9J,EAAS,IAAIqG,EAAW,CAC1B0D,WAAY,CACRvD,EAAWwD,GAAGN,IACd,IAAIpD,GAAc0D,GAAGzD,KACrBE,EAAOuD,GAAG,IACHtD,EACH,CAAEuD,IAAK,aAAcC,IAAK7B,EAAU8B,gBAAgB,GACpD,CAAEF,IAAK,YAAaC,IAAK7B,EAAU8B,gBAAgB,GACnD,CAAEF,IAAK,cAAeC,IAAK7B,EAAU8B,gBAAgB,GAErDxD,IAEJP,GAEJgE,YAAY,EACZC,QAAS,CAAC,yBAA0B,yBACpCjB,SACApE,QAGJrG,EAAQ2E,IAAIN,EAAQhD,GACpBA,EAAOsK,QACP7B,GAAc,EAIlB,IAAI8B,EAAU,EAGVC,EAAQ5I,QAAQwB,UAGpB,MAAMqH,EAAe,KACjBF,EAAU,EACVG,GAAU,EAIRA,EAAW,KACb,IAAIH,EAAJ,CACAA,EAAUI,WAAWF,EAAc,KACnC,IAAK,MAAOlM,EAAM8C,KAAgByB,EAAO,CACrC,MAAM+F,EAAW,gBAAgBtK,aACjC,IAAK,MAAMyE,KAAUqB,SAASuG,iBAAiB/B,GAE3C7F,EAAOzE,MAAQ,UAGfiM,EAAQA,EAAMxI,MAAK,IAAMmE,EAAKnD,EAAQzE,EAAM8C,IAExD,CACI,OAAOmJ,CAZM,CAYD,EAGhB,IAAIK,iBAAiBH,GAAUI,QAAQzG,SAAU,CAC7C0G,WAAW,EACXC,SAAS,IAIb,IAAAC,EAAeP"}